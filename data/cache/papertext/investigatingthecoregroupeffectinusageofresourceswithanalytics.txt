1. INTRODUCTION.
 In the Beuth University of Applied Sciences as in many educational institutions worldwide, face to face and on-line teaching are supported by the use of a Learning Management System (LMS), Moodle [1] . A number of our industrial partners use also an LMS for continuing education. The development and maintenance of learning resources for an LMS requires some effort. Hence it is important to be aware of how learners learn with the learning resources put for them on-line. Though they store users' data, LMS have limited reporting and statistics facilities, which is natural. Their purpose is teaching and learning, not analyzing users' behaviors. To be able to analyze better data stored by LMS, we have started developing a dedicated tool for this purpose [2, 3]. This software should be a Web Application that could be personalized to serve different kinds of end-users such as education providers, teachers, course designers, students and so on. In that respect our tool is similar to AAT [4] or eLAT [5]. End-users are likely to be non proficient in Information Technology, therefore it is essential for an analysis tool (i) to be intuitive in its use, (ii) to present results that end-users can easily interpret and (iii) to use analysis techniques that are well understood, as stressed in [6], and that have been validated in order to inform properly stakeholders and in order to prevent wrong decision making whose consequences are difficult to predict. The present contribution is concerned with this last aspect. While analyzing usage data with teachers, we have come across an interesting pattern like the one depicted in Figure 1 concerning non-compulsory self-tests, here ex1 to ex7, that teachers make available during the semester. This pattern indicates that the number of students attempting these self-tests decreases during the semester. Teachers were interested in investigating this pattern further to uncover the strategy adopted by students: Are they gradually giving up completely, which means that the students who attempt self-test i is roughly a sub-group of the students who attempted the preceding self-test? Or are they eclectic in their choice, which means students attempt randomly some self-tests during the semester though they attempt them less as the semester progresses? In this contribution we explain how we handle these questions. The next section briefly introduces the tool we use for our analysis. Then we expose how to analyze the core group effect when usage of resources declines and, in the follower section, present a case study as a first step to empirically validate our approach. The conclusion ends this paper. 
 2. THE TOOL.
 As mentioned in the introduction, we design a dedicated tool for analysis that is completely separated from the LMS. This means that its data source is also independent of any LMS. In that respect we follow the principles encountered in business applications: the data warehouse used for data analysis is independent of the transactional database used for daily business. Therefore our tool is separated into two main parts: building the data source and querying/analyzing it. The ExtractAndMap module, [2, 3] extracts all usage data stored by an LMS and maps it to Mining-DB, a specially designed database. Mining-DB has a form better suited for querying and mining than the database of an LMS. Further analysis is independent of any LMS. Indeed, the main class of ExtractAndMap can be implemented to extract data from any LMS. For the time being it has been implemented for Moodle. If an institution uses different LMS, all usage data for analysis is in one place, in Mining-DB. This module runs in the background and regularly updates Mining-DB, which then contains current and historical data. This feature makes our tool different from [4], that can not handle data originating from different LMS at once or from tools that are specific to a LMS like [7] or [8]. Another feature of ExtractAndMap is that it renders users anonymous complying with the principles on data privacy in our university. Simple queries on Mining-DB allow to answer a number of very informative questions like: “How many new courses have been created in summer semester 2011?”, “How many students have subscribed the course Introductory Programming with Java and the course formal basics of computer science?”, “How many students have completed self-test 1 in the course Introductory Programming with Java ?”, “What is the average mark in the exam formal basics of computer science of students who have attempted self-test 6 and self-test 7?”, “How many students have accessed Resource X on April, 14 2011?”. A single query can involve an arbitrary number of courses or resources. Currently queries are answered using the MySQL language [9] or the Pentaho reporting tool [10]. The Pentaho reporting tool offers the facility of predefining reports for different kinds of end-users. 
 3. ANALYSING THE CORE GROUP EFFECT.
 We investigate the learning behaviour of students with respect to the resources put in the LMS: how do they use them during the semester? First we explore how each resource is used, which is done with simple queries. In the case we observe a decrease as shown in Figure 1, we want to explore the following behaviour: is a group of students emerging that continuously use the resources or, on the contrary, are the resources used on an irregular basis by different students? In the sequel we denote by |X| the number of students that use resource X and by |X, Y| the number of students who use both resources X and Y. We suppose first that a perfect core group emerges that consequently keeps accessing the resources: students who use X form a subset of those who use some previous resource Y. In that case the number of students who used resources X and Y is the same as the number of students who used X, what is written |X, Y| = |X|, or equivalently, |X, Y| / |X| = 1. In terms of association rules [11], the quantity |X, Y| / |X| is the confidence of the rule X → Y . This rule in our context is interpreted as “if students consulted X, they also consulted Y”. On the contrary, when resources tend to be used on an irregular basis, a number of students consulted resource X without consulting some previous resource Y. In that case |X, Y| ≠ |X|, or equivalently, |X, Y| / |X| < 1. In the worst case, the group who used X is completely distinct from the group who consulted Y and |X, Y| = 0, thus |X, Y| / |X| = 0. The quantity |X, Y| / |X| measures the proportion of the students who used Y among the students who used X. Summing up confidence of the rule X → Y allows to measure to what extend the group of students who consulted some previous resource Y forms a subgroup of those who consulted resource X. In case of a real subgroup confidence is 1. From experience a value of 0.8 or bigger seems adequate to denote a trend towards subgroup. In our context we have a set of n ordered resources Xi where 0 < i < k ≤ n means that Xi has been put online earlier than Xk or Xi is previous to Xk. In the case of a perfect core group, there are many rules with a confidence of 1. First all rules with some previous resource in the consequent: Xk,→ Xi for any i and k such that 0 < i < k ≤ n.. Then it is easy to see that rules with any set of previous resources in the consequent will have also a confidence of 1: Xk,→ S, where S is a set of resources and any resource in S has an index smaller than k. In other words, if a perfect core group emerges, there is a rules “deluge” with a maximum confidence: all rules with on the left side a resource that comes at a later date than the resources on the right side. We make the hypothesis that it is enough to check the confidence of two kinds of association rules, what we call local rules and global rules, for teachers to be aware and to follow the emergence of a core group. Local rules have the form Xi+1 → Xi. These rules are concerned with what happens locally in time: use of a resource and the preceding one. If a group of students starts emerging that continuously uses the resources, this kind of rules should have a high confidence, 0.8 or above. On the contrary confidence should be low if different students irregularly use these resources. Global rules have the form Xi+1 →X1, X2 , … ,Xi and check globally the first i+1 resources: if students use resource Xi+1 then they also use all earlier resources. Again, if a core group starts emerging, confidence of these rules should be fairly high. This hypothesis stipulates that in practice confidence of all possible other rules as mentioned above with the rules deluge will be very similar to the confidence of local and global rules and it is not necessary to check them. 
 4. CASE STUDY.
 We have investigated how students use self-tests in two courses Formal Basics of Computer Science and Introductory Programming with Java both taught in face to face teaching to first semester students enrolled in the degree “Computer Science and Media” at the Beuth University of Applied Sciences, Berlin, during Winter Semester 09/10. 57 students were enrolled in Formal Basics of Computer Science and 65 students were enrolled in Introductory Programming with Java, 46 being enrolled in both courses. Both courses proposed 7 self-tests denoted ex1, ex2 ... ex7 put online gradually during the semester. These tests are not compulsory and students do not earn any mark when they complete them. They are given as complementary resources to support them further in their studies. However, the Java course is quite difficult, especially for students with no experience in programming. The failure rate of the Java course is higher that the one of the Formal Basics course. The teacher in charge of the Java course stresses the usefulness of the self-tests more than the teacher of the Formal Basics course does. This case study focuses on the 46 students enrolled in both courses and investigates how they have attempted these self-tests. 
 Figure 1. Number of students attempting self-tests. Left: Formal Basics course, right: Java course. 
 Figure 1 shows how many students have attempted those tests. One notices a similar pattern though more consistent for the Java course: as the semester progresses less students attempt the selftests. The last test takes place shortly before the exam. Figure 2 shows the confidence of local association rules, 2→1 means if students attempt the second self-test, they attempt the first one. One notices that confidence is quite high for the Java course, except for the last rule, the smallest value being 0.77. About 80% or more of the students who attempt an exercise have attempted the preceding one. It is interesting to look at Figure 1 and 2 together. 
 Figure 2. Confidence of local rules. Bottom: Formal Basics course, Top: Java course. 
 Tests 2 and 3 of the Formal Basics course have been attempted by 23 students as Figure 1 shows. Figure 2 tells us that about 40% students who attempted test 2 did not attempt test 3. Altogether 32 students of the Formal Basics course were active with test 2 or test 3 while it is 29 for the Java course. In the same way, 18 students from the Formal Basics course and 19 students of the Java course were active at attempting exercise 6 or 7. Global rules are shown in Figure 3. Here again for the Java course, omitting the last test, about 70% or more of the students who have attempted an exercise have attempted all preceding ones. 
 Figure 3. Confidence of global rules. Bottom: formal basics course, Top: Java course. 
 Students in these two courses have followed a slightly different strategy. Figure 2 and 3 show a trend for the emergence of a core group till test 6 in the Java course, while from test 3 onwards student tend to pick and choose in the Formal Basics course. Then we have checked the confidence of all rules of the form j→S with j≤ 6 and S a set of self-tests occurring before j different from the sets checked with local or global rules. With one exception (0.71 for the rule 4 → 1, 2, 3), confidence is never below 0.77 for the Java course and always well above 0.8 if S contains only 1 resource. For the Formal Basics course confidence of these rules varies between 0.18 and 0.65, many values being around 0.30. These results are in the range given by the local and global rules and thus confirm our hypothesis. We have obtained very similar results when considering all students, not only those registered in both courses. In that setting we have investigated local and global rules from an association rules point of view [11] and finish this section summarising the findings First notice that we are not interested in support, a measure often needed to extract association rules that occur often enough in the data. Support of global and local rules varies greatly, 0.06 (smallest value in the Formal Basics course) to more than 0.54 (greatest value in the Java course). Global rules particularly can be rare association rules [12]. Then we have checked with three further measures the interestingness of our rules: lift, cosine and correlation [13]. The values obtained rate the local and global rules of the Java course as interesting, whereas cosine and correlation rated most of the local and global rules of the Formal Basics course as borderline. Further we have checked the marks in the final exam in different settings: average in general, average of students who attempted at least one exercise, average of students who did not attempt any exercise, average of students who attempted exercise 1, average of students who attempted exercise 2, and so on till average of students who attempted exercise 7. In both courses the average of students who attempted at least one exercise was higher than the general average. A striking difference was that the highest average was for students who attempted exercise 7 in the Java course [2]. Such an effect was not visible for the Formal Basics course. We have extracted local and global rules using queries only, not using any association rule mining algorithm. There are two reasons for that. First we know exactly which associations we are looking for. There is no need for an algorithm that has to discover possible associations. Second support is not important in our case and can vary greatly. It would be difficult to adjust support to find the desired local and global rules with some association mining tool. 
 5. CONCLUSION.
 In this paper we explain our approach to investigate the core group effect in resources usage. With core group effect we mean the following: Given a set of resources whose usage decreases over time, is a group of students emerging that continuously use the resources or, on the contrary, are the resources used on an irregular basis by different students? We do not check all possible dependencies between usage of resources but only those given by what we call local rules and global rules. When confidence of these rules is around or above 0.8, we interpret these rules as a trend towards cor group effect. The idea can be generalized when usage stays constant over time and one wants to investigate whether resources are used by a stable group of students. When usage of resources increases, reversing the rules should show whether a core group is growing. For the teacher to intervene our experience shows that the information given by local and global rules has to be completed with more analysis, like past values about marks in the final exam: Do students who attempt all exercises get better marks? Do students who attempt at least one exercise get better marks? This information has to be combined with the follow-up of use of resources to intervene properly. 
 6. ACKNOWLEDGMENTS.
 This work is partly supported by the Institute für Angewandte Forschung Berlin and the European Social Fund for the Berlin state project “LeMo” .